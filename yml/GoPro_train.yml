name: UFPNet-GoPro
model_type: ImageRestorationModel
scale: 1
num_gpu: 4 # set num_gpu: 0 for cpu mode
manual_seed: 10


# dataset and data loader settings
datasets:
  train:
    name: GoPro
    type: PairedImageDataset

    dataroot_gt: /raid/joowan/GoPro/train/sharp
    dataroot_lq: /raid/joowan/GoPro/train/blur

    filename_tmpl: '{}'
    io_backend:
      type: disk

    gt_size: 256
    use_flip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 1
    batch_size_per_gpu: 1
    dataset_enlarge_ratio: 1
    prefetch_mode: 'cuda'
    pin_memory: true

  val:
    name: GoPro
    type: PairedImageDataset
    dataroot_gt: /raid/joowan/GoPro/train/sharp
    dataroot_lq: /raid/joowan/GoPro/train/blur
    io_backend:
      type: disk



# network structures
network_g:
  type: UFPNet_code_uncertainty_Local
  width: 64
  enc_blk_nums: [1, 1, 1, 28]   # 마지막층은 안봄, 일부러 1이 아닌 수를 넣은것 같다
  middle_blk_num: 1
  dec_blk_nums: [1, 1, 1, 1]


# path
path:
  pretrain_network_g: weights/net_g_latest.pth
  strict_load_g: true
  resume_state: ~


# training settings
train:
  optim_g:
    type: AdamW
    lr: !!float 1e-3
    weight_decay: !!float 1e-3
    betas: [0.9, 0.9]

  scheduler:
    type: TrueCosineAnnealingLR
    T_max: 400000
    eta_min: !!float 1e-7

  total_iter: 400000
  warmup_iter: -1 # no warm up

  # losses
  pixel_opt:
    type: PSNRLoss
    loss_weight: 1
    reduction: mean

  reblur_opt:
    type: L1Loss
    loss_weight: 0.01
    reduction: mean

# validation settings
val:
  val_freq: !!float 2e4
  save_img: false


  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 1
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
